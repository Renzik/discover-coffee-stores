import Head from 'next/head';
import Image from 'next/image';
import type {
  NextPageWithLayout,
  GetStaticProps,
  GetStaticPathsContext,
  GetStaticPropsResult,
} from 'next';
// components
import Banner from '@component/banner/Banner';
// layout
import AppLayout from '@component/layouts/AppLayout';
// styles
import styles from '@style/home.module.css';
import Card from '@component/card/Card';
// JSON
import coffeeStoresDummyData from '@data/coffee-stores.json';
// interfaces
import ICoffeeStore from 'interfaces/ICoffeeStore';
import { fetchPlaces } from 'lib/fetch-places';

type Props = {
  coffeeStores: ICoffeeStore[];
};

const Home: NextPageWithLayout<Props> = ({ coffeeStores }) => {
  return (
    <div className={styles.container}>
      <Head>
        <title>Coffee Connoisseur</title>
        {/* <meta name='description' content='Generated by create next app' /> */}
        <link rel='icon' href='/static/background.png' />
      </Head>
      <main className={styles.main}>
        <Banner buttonText='View stores nearby' handleOnClick={() => console.log('hello there')} />
        <div className={styles.heroImage}>
          <Image src='/static/hero-image.png' alt='' width={700} height={400} />
        </div>
        {!!coffeeStores.length && (
          <>
            <h2 className={styles.heading2}>Toronto stores</h2>
            <div className={styles.cardLayout}>
              {coffeeStores?.map((coffeeStore: ICoffeeStore) => (
                <Card key={coffeeStore?.id} className={styles.card} coffeeStore={coffeeStore} />
              ))}
            </div>
          </>
        )}
      </main>
    </div>
  );
};

export const getStaticProps: GetStaticProps = async ({}: GetStaticPathsContext): Promise<
  GetStaticPropsResult<Props>
> => {
  // const options = {
  //   method: 'GET',
  //   headers: {
  //     Accept: 'application/json',
  //     Authorization: 'fsq3iCmJeSyBSfi214mcASE2+JKwMvKTxDcpmREcgOI2ybk=',
  //   },
  // };

  // const res = await fetch(
  //   'https://api.foursquare.com/v3/places/search?categories=13032%2C13033%2C13034%2C13035%2C13063%2C13036%2C11126&near=Santo%20Domingo',
  //   options
  // );

  const coffeeStores = await fetchPlaces({
    categories: '13032,2C13033,2C13034,2C13035,2C13063,2C13036,2C11126',
    near: 'Santo Domingo',
  });
  // console.log('coffeeStores', coffeeStores);
  return {
    props: { coffeeStores: coffeeStoresDummyData },
  };
};

// Home.getLayout = function getLayout(page: ReactElement) {
//   return <AppLayout>{page}</AppLayout>;
// };

Home.layout = AppLayout;

export default Home;
